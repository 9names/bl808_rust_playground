/* automatically generated by rust-bindgen 0.63.0 */

pub const NULL: u32 = 0;
#[repr(u32)]
#[doc = " @brief Error type definition"]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum BL_Err_Type {
    SUCCESS = 0,
    ERROR = 1,
    TIMEOUT = 2,
    INVALID = 3,
    NORESC = 4,
}
#[repr(u32)]
#[doc = " @brief Functional type definition"]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum BL_Fun_Type {
    DISABLE = 0,
    ENABLE = 1,
}
#[repr(u32)]
#[doc = " @brief Status type definition"]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum BL_Sts_Type {
    RESET = 0,
    SET = 1,
}
#[repr(u32)]
#[doc = " @brief Mask type definition"]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum BL_Mask_Type {
    UNMASK = 0,
    MASK = 1,
}
#[repr(u32)]
#[doc = " @brief Logical status Type definition"]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum LogicalStatus {
    LOGIC_LO = 0,
    LOGIC_HI = 1,
}
#[repr(u32)]
#[doc = " @brief Active status Type definition"]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum ActiveStatus {
    DEACTIVE = 0,
    ACTIVE = 1,
}
#[doc = "  @brief Interrupt callback function type"]
pub type intCallback_Type = ::core::option::Option<unsafe extern "C" fn()>;
pub type pFunc = ::core::option::Option<unsafe extern "C" fn()>;
extern "C" {
    pub fn arch_memcpy(
        dst: *mut ::core::ffi::c_void,
        src: *const ::core::ffi::c_void,
        n: u32,
    ) -> *mut ::core::ffi::c_void;
}
extern "C" {
    pub fn arch_memset(s: *mut ::core::ffi::c_void, c: u8, n: u32) -> *mut ::core::ffi::c_void;
}
extern "C" {
    pub fn arch_memcmp(
        s1: *const ::core::ffi::c_void,
        s2: *const ::core::ffi::c_void,
        n: u32,
    ) -> ::core::ffi::c_int;
}
extern "C" {
    pub fn arch_memcpy4(dst: *mut u32, src: *const u32, n: u32) -> *mut u32;
}
extern "C" {
    pub fn arch_memcpy_fast(
        pdst: *mut ::core::ffi::c_void,
        psrc: *const ::core::ffi::c_void,
        n: u32,
    ) -> *mut ::core::ffi::c_void;
}
extern "C" {
    pub fn arch_memset4(dst: *mut u32, val: u32, n: u32) -> *mut u32;
}
extern "C" {
    pub fn memcopy_to_fifo(fifo_addr: *mut ::core::ffi::c_void, data: *mut u8, length: u32);
}
extern "C" {
    pub fn fifocopy_to_mem(fifo_addr: *mut ::core::ffi::c_void, data: *mut u8, length: u32);
}
extern "C" {
    pub fn arch_ctzll(val: *mut u64, bit: *mut u32) -> ::core::ffi::c_int;
}
extern "C" {
    pub fn arch_clzll(val: *mut u64, bit: *mut u32) -> ::core::ffi::c_int;
}
extern "C" {
    pub fn arch_ffsll(val: *mut u64, bit: *mut u32) -> ::core::ffi::c_int;
}
