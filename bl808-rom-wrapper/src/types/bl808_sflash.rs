/* automatically generated by rust-bindgen 0.63.0 */

#[doc = "  @brief Serial flash configuration structure type definition"]
#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct SPI_Flash_Cfg_Type {
    #[doc = "< Serail flash interface mode,bit0-3:IF mode,bit4:unwrap,bit5:32-bits addr mode support"]
    pub ioMode: u8,
    #[doc = "< Support continuous read mode,bit0:continuous read mode support,bit1:read mode cfg"]
    pub cReadSupport: u8,
    #[doc = "< SPI clock delay,bit0-3:delay,bit4-6:pad delay"]
    pub clkDelay: u8,
    #[doc = "< SPI clock phase invert,bit0:clck invert,bit1:rx invert,bit2-4:pad delay,bit5-7:pad delay"]
    pub clkInvert: u8,
    #[doc = "< Flash enable reset command"]
    pub resetEnCmd: u8,
    #[doc = "< Flash reset command"]
    pub resetCmd: u8,
    #[doc = "< Flash reset continuous read command"]
    pub resetCreadCmd: u8,
    #[doc = "< Flash reset continuous read command size"]
    pub resetCreadCmdSize: u8,
    #[doc = "< JEDEC ID command"]
    pub jedecIdCmd: u8,
    #[doc = "< JEDEC ID command dummy clock"]
    pub jedecIdCmdDmyClk: u8,
    #[doc = "< Enter 32-bits addr command"]
    pub enter32BitsAddrCmd: u8,
    #[doc = "< Exit 32-bits addr command"]
    pub exit32BitsAddrCmd: u8,
    #[doc = "< *1024bytes"]
    pub sectorSize: u8,
    #[doc = "< Manufacturer ID"]
    pub mid: u8,
    #[doc = "< Page size"]
    pub pageSize: u16,
    #[doc = "< Chip erase cmd"]
    pub chipEraseCmd: u8,
    #[doc = "< Sector erase command"]
    pub sectorEraseCmd: u8,
    #[doc = "< Block 32K erase command,some Micron not support"]
    pub blk32EraseCmd: u8,
    #[doc = "< Block 64K erase command"]
    pub blk64EraseCmd: u8,
    #[doc = "< Need before every erase or program"]
    pub writeEnableCmd: u8,
    #[doc = "< Page program cmd"]
    pub pageProgramCmd: u8,
    #[doc = "< QIO page program cmd"]
    pub qpageProgramCmd: u8,
    #[doc = "< QIO page program address mode"]
    pub qppAddrMode: u8,
    #[doc = "< Fast read command"]
    pub fastReadCmd: u8,
    #[doc = "< Fast read command dummy clock"]
    pub frDmyClk: u8,
    #[doc = "< QPI fast read command"]
    pub qpiFastReadCmd: u8,
    #[doc = "< QPI fast read command dummy clock"]
    pub qpiFrDmyClk: u8,
    #[doc = "< Fast read dual output command"]
    pub fastReadDoCmd: u8,
    #[doc = "< Fast read dual output command dummy clock"]
    pub frDoDmyClk: u8,
    #[doc = "< Fast read dual io comamnd"]
    pub fastReadDioCmd: u8,
    #[doc = "< Fast read dual io command dummy clock"]
    pub frDioDmyClk: u8,
    #[doc = "< Fast read quad output comamnd"]
    pub fastReadQoCmd: u8,
    #[doc = "< Fast read quad output comamnd dummy clock"]
    pub frQoDmyClk: u8,
    #[doc = "< Fast read quad io comamnd"]
    pub fastReadQioCmd: u8,
    #[doc = "< Fast read quad io comamnd dummy clock"]
    pub frQioDmyClk: u8,
    #[doc = "< QPI fast read quad io comamnd"]
    pub qpiFastReadQioCmd: u8,
    #[doc = "< QPI fast read QIO dummy clock"]
    pub qpiFrQioDmyClk: u8,
    #[doc = "< QPI program command"]
    pub qpiPageProgramCmd: u8,
    #[doc = "< Enable write reg"]
    pub writeVregEnableCmd: u8,
    #[doc = "< Write enable register index"]
    pub wrEnableIndex: u8,
    #[doc = "< Quad mode enable register index"]
    pub qeIndex: u8,
    #[doc = "< Busy status register index"]
    pub busyIndex: u8,
    #[doc = "< Write enable bit pos"]
    pub wrEnableBit: u8,
    #[doc = "< Quad enable bit pos"]
    pub qeBit: u8,
    #[doc = "< Busy status bit pos"]
    pub busyBit: u8,
    #[doc = "< Register length of write enable"]
    pub wrEnableWriteRegLen: u8,
    #[doc = "< Register length of write enable status"]
    pub wrEnableReadRegLen: u8,
    #[doc = "< Register length of contain quad enable"]
    pub qeWriteRegLen: u8,
    #[doc = "< Register length of contain quad enable status"]
    pub qeReadRegLen: u8,
    #[doc = "< Release power down command"]
    pub releasePowerDown: u8,
    #[doc = "< Register length of contain busy status"]
    pub busyReadRegLen: u8,
    #[doc = "< Read register command buffer"]
    pub readRegCmd: [u8; 4usize],
    #[doc = "< Write register command buffer"]
    pub writeRegCmd: [u8; 4usize],
    #[doc = "< Enter qpi command"]
    pub enterQpi: u8,
    #[doc = "< Exit qpi command"]
    pub exitQpi: u8,
    #[doc = "< Config data for continuous read mode"]
    pub cReadMode: u8,
    #[doc = "< Config data for exit continuous read mode"]
    pub cRExit: u8,
    #[doc = "< Enable burst wrap command"]
    pub burstWrapCmd: u8,
    #[doc = "< Enable burst wrap command dummy clock"]
    pub burstWrapCmdDmyClk: u8,
    #[doc = "< Data and address mode for this command"]
    pub burstWrapDataMode: u8,
    #[doc = "< Data to enable burst wrap"]
    pub burstWrapData: u8,
    #[doc = "< Disable burst wrap command"]
    pub deBurstWrapCmd: u8,
    #[doc = "< Disable burst wrap command dummy clock"]
    pub deBurstWrapCmdDmyClk: u8,
    #[doc = "< Data and address mode for this command"]
    pub deBurstWrapDataMode: u8,
    #[doc = "< Data to disable burst wrap"]
    pub deBurstWrapData: u8,
    #[doc = "< 4K erase time"]
    pub timeEsector: u16,
    #[doc = "< 32K erase time"]
    pub timeE32k: u16,
    #[doc = "< 64K erase time"]
    pub timeE64k: u16,
    #[doc = "< Page program time"]
    pub timePagePgm: u16,
    #[doc = "< Chip erase time in ms"]
    pub timeCe: u16,
    #[doc = "< Release power down command delay time for wake up"]
    pub pdDelay: u8,
    #[doc = "< QE set data"]
    pub qeData: u8,
}
#[test]
fn bindgen_test_layout_SPI_Flash_Cfg_Type() {
    const UNINIT: ::core::mem::MaybeUninit<SPI_Flash_Cfg_Type> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<SPI_Flash_Cfg_Type>(),
        84usize,
        concat!("Size of: ", stringify!(SPI_Flash_Cfg_Type))
    );
    assert_eq!(
        ::core::mem::align_of::<SPI_Flash_Cfg_Type>(),
        1usize,
        concat!("Alignment of ", stringify!(SPI_Flash_Cfg_Type))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).ioMode) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(ioMode)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).cReadSupport) as usize - ptr as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(cReadSupport)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).clkDelay) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(clkDelay)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).clkInvert) as usize - ptr as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(clkInvert)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).resetEnCmd) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(resetEnCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).resetCmd) as usize - ptr as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(resetCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).resetCreadCmd) as usize - ptr as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(resetCreadCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).resetCreadCmdSize) as usize - ptr as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(resetCreadCmdSize)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).jedecIdCmd) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(jedecIdCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).jedecIdCmdDmyClk) as usize - ptr as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(jedecIdCmdDmyClk)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).enter32BitsAddrCmd) as usize - ptr as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(enter32BitsAddrCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).exit32BitsAddrCmd) as usize - ptr as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(exit32BitsAddrCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).sectorSize) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(sectorSize)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).mid) as usize - ptr as usize },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(mid)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).pageSize) as usize - ptr as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(pageSize)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).chipEraseCmd) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(chipEraseCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).sectorEraseCmd) as usize - ptr as usize },
        17usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(sectorEraseCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).blk32EraseCmd) as usize - ptr as usize },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(blk32EraseCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).blk64EraseCmd) as usize - ptr as usize },
        19usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(blk64EraseCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).writeEnableCmd) as usize - ptr as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(writeEnableCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).pageProgramCmd) as usize - ptr as usize },
        21usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(pageProgramCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).qpageProgramCmd) as usize - ptr as usize },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(qpageProgramCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).qppAddrMode) as usize - ptr as usize },
        23usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(qppAddrMode)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).fastReadCmd) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(fastReadCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).frDmyClk) as usize - ptr as usize },
        25usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(frDmyClk)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).qpiFastReadCmd) as usize - ptr as usize },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(qpiFastReadCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).qpiFrDmyClk) as usize - ptr as usize },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(qpiFrDmyClk)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).fastReadDoCmd) as usize - ptr as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(fastReadDoCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).frDoDmyClk) as usize - ptr as usize },
        29usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(frDoDmyClk)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).fastReadDioCmd) as usize - ptr as usize },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(fastReadDioCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).frDioDmyClk) as usize - ptr as usize },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(frDioDmyClk)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).fastReadQoCmd) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(fastReadQoCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).frQoDmyClk) as usize - ptr as usize },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(frQoDmyClk)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).fastReadQioCmd) as usize - ptr as usize },
        34usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(fastReadQioCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).frQioDmyClk) as usize - ptr as usize },
        35usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(frQioDmyClk)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).qpiFastReadQioCmd) as usize - ptr as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(qpiFastReadQioCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).qpiFrQioDmyClk) as usize - ptr as usize },
        37usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(qpiFrQioDmyClk)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).qpiPageProgramCmd) as usize - ptr as usize },
        38usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(qpiPageProgramCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).writeVregEnableCmd) as usize - ptr as usize },
        39usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(writeVregEnableCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).wrEnableIndex) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(wrEnableIndex)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).qeIndex) as usize - ptr as usize },
        41usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(qeIndex)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).busyIndex) as usize - ptr as usize },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(busyIndex)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).wrEnableBit) as usize - ptr as usize },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(wrEnableBit)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).qeBit) as usize - ptr as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(qeBit)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).busyBit) as usize - ptr as usize },
        45usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(busyBit)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).wrEnableWriteRegLen) as usize - ptr as usize },
        46usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(wrEnableWriteRegLen)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).wrEnableReadRegLen) as usize - ptr as usize },
        47usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(wrEnableReadRegLen)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).qeWriteRegLen) as usize - ptr as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(qeWriteRegLen)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).qeReadRegLen) as usize - ptr as usize },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(qeReadRegLen)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).releasePowerDown) as usize - ptr as usize },
        50usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(releasePowerDown)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).busyReadRegLen) as usize - ptr as usize },
        51usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(busyReadRegLen)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).readRegCmd) as usize - ptr as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(readRegCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).writeRegCmd) as usize - ptr as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(writeRegCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).enterQpi) as usize - ptr as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(enterQpi)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).exitQpi) as usize - ptr as usize },
        61usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(exitQpi)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).cReadMode) as usize - ptr as usize },
        62usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(cReadMode)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).cRExit) as usize - ptr as usize },
        63usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(cRExit)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).burstWrapCmd) as usize - ptr as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(burstWrapCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).burstWrapCmdDmyClk) as usize - ptr as usize },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(burstWrapCmdDmyClk)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).burstWrapDataMode) as usize - ptr as usize },
        66usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(burstWrapDataMode)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).burstWrapData) as usize - ptr as usize },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(burstWrapData)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).deBurstWrapCmd) as usize - ptr as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(deBurstWrapCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).deBurstWrapCmdDmyClk) as usize - ptr as usize },
        69usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(deBurstWrapCmdDmyClk)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).deBurstWrapDataMode) as usize - ptr as usize },
        70usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(deBurstWrapDataMode)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).deBurstWrapData) as usize - ptr as usize },
        71usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(deBurstWrapData)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).timeEsector) as usize - ptr as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(timeEsector)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).timeE32k) as usize - ptr as usize },
        74usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(timeE32k)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).timeE64k) as usize - ptr as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(timeE64k)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).timePagePgm) as usize - ptr as usize },
        78usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(timePagePgm)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).timeCe) as usize - ptr as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(timeCe)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).pdDelay) as usize - ptr as usize },
        82usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(pdDelay)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).qeData) as usize - ptr as usize },
        83usize,
        concat!(
            "Offset of field: ",
            stringify!(SPI_Flash_Cfg_Type),
            "::",
            stringify!(qeData)
        )
    );
}
#[doc = "  @brief Serial flash security register configuration"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SFlash_Sec_Reg_Cfg {
    #[doc = "< Erase security register command"]
    pub eraseCmd: u8,
    #[doc = "< Program security register command"]
    pub programCmd: u8,
    #[doc = "< Read security register command"]
    pub readCmd: u8,
    #[doc = "< Enter security register option mode command"]
    pub enterSecOptCmd: u8,
    #[doc = "< Exit security register option mode command"]
    pub exitSecOptCmd: u8,
    #[doc = "< Security register block number"]
    pub blockNum: u8,
    #[doc = "< Data pointer to be program/read"]
    pub data: *mut u8,
    #[doc = "< Start address to be program/read"]
    pub addr: u32,
    #[doc = "< Data length to be program/read"]
    pub len: u32,
}
#[test]
fn bindgen_test_layout_SFlash_Sec_Reg_Cfg() {
    const UNINIT: ::core::mem::MaybeUninit<SFlash_Sec_Reg_Cfg> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<SFlash_Sec_Reg_Cfg>(),
        24usize,
        concat!("Size of: ", stringify!(SFlash_Sec_Reg_Cfg))
    );
    assert_eq!(
        ::core::mem::align_of::<SFlash_Sec_Reg_Cfg>(),
        8usize,
        concat!("Alignment of ", stringify!(SFlash_Sec_Reg_Cfg))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).eraseCmd) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(SFlash_Sec_Reg_Cfg),
            "::",
            stringify!(eraseCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).programCmd) as usize - ptr as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(SFlash_Sec_Reg_Cfg),
            "::",
            stringify!(programCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).readCmd) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(SFlash_Sec_Reg_Cfg),
            "::",
            stringify!(readCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).enterSecOptCmd) as usize - ptr as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(SFlash_Sec_Reg_Cfg),
            "::",
            stringify!(enterSecOptCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).exitSecOptCmd) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(SFlash_Sec_Reg_Cfg),
            "::",
            stringify!(exitSecOptCmd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).blockNum) as usize - ptr as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(SFlash_Sec_Reg_Cfg),
            "::",
            stringify!(blockNum)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).data) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(SFlash_Sec_Reg_Cfg),
            "::",
            stringify!(data)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).addr) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(SFlash_Sec_Reg_Cfg),
            "::",
            stringify!(addr)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).len) as usize - ptr as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(SFlash_Sec_Reg_Cfg),
            "::",
            stringify!(len)
        )
    );
}
